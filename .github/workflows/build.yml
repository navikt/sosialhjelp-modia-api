name: Build
on:
  push:
    branches:
      - '**' # Build all branches
    tags-ignore:
      - '**' # Don't build any tags

jobs:
  build:
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - uses: actions/checkout@v1
      - uses: actions/cache@v1.1.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-cache-
      - uses: actions/cache@v1.1.2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper-
      - name: Run tests
        run: ./gradlew test
      - name: Build JAR
        run: ./gradlew clean shadowJar -x test
      - name: Login to GitHub package registry
        run: |
          echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_REPOSITORY} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create artifact version
        id: artifact-version
        uses: navikt/sosialhjelp-ci/actions/create-artifact-version@master
      - name: Create docker image tags
        run: |
          PROJECT_NAME=$(echo $GITHUB_REPOSITORY | cut -d/ -f2)-2
          echo "docker.pkg.github.com/$GITHUB_REPOSITORY/$PROJECT_NAME:$VERSION" > DOCKER_TAG
        env:
          VERSION: ${{ steps.artifact-version.outputs.version }}
      - name: Build docker image
        run: docker build -t $(cat DOCKER_TAG) .
      - name: Create tag and release
        # TODO: Bytt ut med upstream n√•r/hvis https://github.com/actions/create-release/pull/32 merges
        uses: fleskesvor/create-release@feature/support-target-commitish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.artifact-version.outputs.version }}
          release_name: ${{ steps.artifact-version.outputs.version }}
          commitish: ${{ github.sha }}
      - name: Push docker image
        run: |
          cat DOCKER_TAG
          docker push $(cat DOCKER_TAG)

  deploy:
    name: Deploy to labs-gcp
    runs-on: ubuntu-latest
    steps:
      - name: Sett env variabler
        run: |
          PROJECT_NAME=$(echo ${{ github.repository }} | cut -d/ -f2)-2
          echo ::set-env name=IMAGE::$(echo "docker.pkg.github.com/${{ github.repository }}/$PROJECT_NAME":${{ env.VERSION }})

      - uses: actions/checkout@v1

      - name: Deploy til GCP
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: nais.yaml
          CLUSTER: labs-gcp
          VARS: nais/dev/labs-gcp.json
          REF: ${{ env.VERSION }}
          PRINT_PAYLOAD: true
          IMAGE: ${{ env.IMAGE }}
