name: Deploy GCP
on:
  repository_dispatch:
    types: [deploy_dev_gcp]

jobs:
  deploy:
    name: Deploy to GCP
    runs-on: ubuntu-latest
    if: github.event.action == 'deploy_dev_gcp'
    steps:
      - name: Sett env variabler
        run: |
          PROJECT_NAME=$(echo ${{ github.repository }} | cut -d/ -f2)-2
          echo ::set-env name=IMAGE::$(echo "docker.pkg.github.com/${{ github.repository }}/$PROJECT_NAME":${{ github.event.client_payload.TAG }})

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.TAG }}

      - name: Deploy til GCP
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: nais.yaml
          CLUSTER: ${{ github.event.client_payload.MILJO }}
          VARS: nais/dev/${{ github.event.client_payload.MILJO }}.json
          REF: ${{ github.event.client_payload.TAG }}
          PRINT_PAYLOAD: true
          IMAGE: ${{ env.IMAGE }}
          ABAC_PDP_ENDPOINT_URL: https://digisos.labs.nais.io/sosialhjelp/mock-alt-api/abac/application/authorize
          FIKS_DIGISOS_ENDPOINT_URL: https://digisos.labs.nais.io/sosialhjelp/mock-alt-api/fiks
          ID_PORTEN_TOKEN_URL: https://digisos.labs.nais.io/sosialhjelp/mock-alt-api/idporten/idporten-oidc-provider/token
          ID_PORTEN_CONFIG_URL: https://digisos.labs.nais.io/sosialhjelp/mock-alt-api/idporten/idporten-oidc-provider/.well-known/openid-configuration
          NORG_ENDPOINT_URL: https://digisos.labs.nais.io/sosialhjelp/mock-alt-api/norg_endpoint_url
          PDL_ENDPOINT_URL: https://digisos.labs.nais.io/sosialhjelp/mock-alt-api/pdl_endpoint_url
          STS_TOKEN_ENDPOINT_URL: https://digisos.labs.nais.io/sosialhjelp/mock-alt-api/sts_token_endpoint_url